package lab07;

/**
 * A warrior has the following properties:
 * name
 * health
 * max health
 * weapon
 */
public interface WarriorI {

  /**
   * Return the weapon that the warrior
   * currently has equipped.
   * There should be * a variable of type
   * WeaponI to hold this data.
   */
  public WeaponI getWeapon();

  /**
   * Place the weapon object in the
   * warrior's hand.
   */
  public void setWeapon(WeaponI w);

  /**
   * Return the warrior's name, e.g.
   * Conan, RedSonja, etc. The
   * variable 'name' should be a field
   * on your class.
   */
  public String getName();

  /**
   * Returns true if the warrior
   * has taken more damage than
   * the warrior's maxHealth.
   */
  public boolean isDefeated();

  /**
   * Returns true if the warrior
   * has taken no damage.
   */
  public boolean isHealthy();

  /**
   * Invokes the getDamage() method
   * on the weapon and subtracts the returned
   * value from the warrior's current health points.
   * If the warrior's health points fall
   * to zero or lower, the warrior is
   * defeated. This method returns
   * the amount of damage dealt.
   */
  public int takeDamage(WeaponI w);

  /**
   * The maximum amount of damage the
   * warrior could take if the warrior
   * were healthy before being defeated.
   * maxHealth should be a field on your
   * class.
   */
  public int getMaxHealth();

  /**
   * The current amount of damage the
   * warrior could take if the warrior
   * were healthy before being defeated.
   * health should be a field on your class.
   */
  public int getHealth();

  /**
   * The format should look like this:
   *
   * "Warrior {name}, health={number}, max health={number}"
   */
  public String toString();

  /**
   * This method should take a string in the same format
   * as that generated by the toString() method above, i.e.,
   *
   * "Warrior {name}, health={number}, max health={number}"
   *
   * It should parse  using the findInLine() method on Scanner,
   * and sets the values.
   * Note that spaces may vary in length. The
   * following is valid.
   * Warrior conan,health=10, max  health=13
   *
   * If the string doesn't match the above pattern,
   * you should throw a PatternMatchException.
   *
   * <em>Note</em>: it's probably a good idea to add \\s*
   * to the end of your pattern in order to deal with line
   * ending problems.
   */
  public void initFromString(String input);

  /**
   * Restore a warrior to full health.
   */
  public void heal();
}